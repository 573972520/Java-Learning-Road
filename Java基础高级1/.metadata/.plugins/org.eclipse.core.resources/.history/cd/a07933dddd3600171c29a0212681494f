package 网络编程;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class Server2
{

	/**
	 * 把从客户端读取到的一行数据的字符进行反转，然后发送给客户端
	 * 当读取到over时，连接断开
	 * @param args
	 */
	public static void main(String args)
	{
		// TODO Auto-generated method stub
		try
		{
			ServerSocket server = new ServerSocket(20005);
			while (true)
			{
				Socket socket = server.accept();
				MyThread2 thread1 = new MyThread2(socket);
				thread1.start();
			}
		} catch (IOException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}

class MyThread2 extends Thread
{
	private Socket socket;

	public MyThread2(Socket socket)
	{
		this.socket = socket;
	}

	@Override
	public void run()
	{

		try
		{
			BufferedReader buffReader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			BufferedWriter buffWriter = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
			String line = null;
			while ((line = buffReader.readLine()) != null)
			{
				if ("over".equalsIgnoreCase(line))
				{
					try
					{
						socket.close();
					} catch (IOException e)
					{
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				//
				else
				{
					String[] strs = new String[line.length()];
					for (int i = 0; i < strs.length / 2; i++)
					{
						String temp;
						temp = strs[strs.length - 1 - i];
						strs[i] = temp;
					}
				}

			}
		} catch (IOException e1)
		{
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	}
}